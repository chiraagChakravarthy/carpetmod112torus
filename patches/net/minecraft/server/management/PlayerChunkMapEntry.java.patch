--- ../src-base/minecraft/net/minecraft/server/management/PlayerChunkMapEntry.java
+++ ../src-work/minecraft/net/minecraft/server/management/PlayerChunkMapEntry.java
@@ -1,8 +1,11 @@
 package net.minecraft.server.management;
 
+import carpet.torus.TorusUtil;
 import com.google.common.base.Predicate;
 import com.google.common.collect.Iterables;
 import com.google.common.collect.Lists;
+
+import java.util.ArrayList;
 import java.util.List;
 import javax.annotation.Nullable;
 import net.minecraft.entity.player.EntityPlayerMP;
@@ -15,29 +18,40 @@
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.ChunkPos;
+import net.minecraft.util.math.MathHelper;
 import net.minecraft.world.chunk.Chunk;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import carpet.CarpetSettings;
+import carpet.carpetclient.CarpetClientChunkLogger;
+import carpet.helpers.IPlayerSensitiveTileEntity;
+
+import static carpet.torus.TorusUtil.*;
+
 public class PlayerChunkMapEntry
 {
     private static final Logger field_187281_a = LogManager.getLogger();
     private final PlayerChunkMap field_187282_b;
-    private final List<EntityPlayerMP> field_187283_c = Lists.<EntityPlayerMP>newArrayList();
+    public final List<EntityPlayerMP> field_187283_c = Lists.<EntityPlayerMP>newArrayList(); // CM: changed to public
     private final ChunkPos field_187284_d;
     private final short[] field_187285_e = new short[64];
     @Nullable
-    private Chunk field_187286_f;
-    private int field_187287_g;
+    public Chunk field_187286_f; // CM: changed to public
+    public int field_187287_g;
     private int field_187288_h;
     private long field_187289_i;
-    private boolean field_187290_j;
+    public boolean field_187290_j; // CM: changed to public
 
-    public PlayerChunkMapEntry(PlayerChunkMap p_i1518_1_, int p_i1518_2_, int p_i1518_3_)
+    public PlayerChunkMapEntry(PlayerChunkMap mapIn, int chunkX, int chunkZ, EntityPlayerMP player)
     {
-        this.field_187282_b = p_i1518_1_;
-        this.field_187284_d = new ChunkPos(p_i1518_2_, p_i1518_3_);
-        this.field_187286_f = p_i1518_1_.func_72688_a().func_72863_F().func_186028_c(p_i1518_2_, p_i1518_3_);
+        this.field_187282_b = mapIn;
+        this.field_187284_d = new ChunkPos(chunkX, chunkZ);
+        if(carpet.carpetclient.CarpetClientChunkLogger.logger.enabled)
+            carpet.carpetclient.CarpetClientChunkLogger.setReason("Player loading chunk");
+        // Added a way to remove spectators loading chunks. CARPET-XCOM
+        if(!CarpetSettings.spectatorsDontLoadChunks || !player.func_175149_v()) this.field_187286_f = mapIn.func_72688_a().func_72863_F().func_186028_c(chunkX, chunkZ);
+        carpet.carpetclient.CarpetClientChunkLogger.resetReason();
     }
 
     public ChunkPos func_187264_a()
@@ -53,6 +67,14 @@
         }
         else
         {
+            // ChunkLogger - 0x-CARPET
+            if(CarpetClientChunkLogger.logger.enabled) {
+                if(carpet.carpetclient.CarpetClientChunkLogger.logger.enabled)
+                    carpet.carpetclient.CarpetClientChunkLogger.setReason("Player added to chunk");
+            	CarpetClientChunkLogger.logger.log(this.field_187282_b.func_72688_a(),field_187284_d.field_77276_a,field_187284_d.field_77275_b,CarpetClientChunkLogger.Event.PLAYER_ENTERS);
+                carpet.carpetclient.CarpetClientChunkLogger.resetReason();
+            }
+
             if (this.field_187283_c.isEmpty())
             {
                 this.field_187289_i = this.field_187282_b.func_72688_a().func_82737_E();
@@ -65,13 +87,17 @@
                 this.func_187278_c(p_187276_1_);
             }
         }
+
+        // Added to enable randomticking chunk updates Carpet-XCOM
+        carpet.carpetclient.CarpetClientRandomtickingIndexing.enableUpdate(p_187276_1_);
     }
 
     public void func_187277_b(EntityPlayerMP p_187277_1_)
     {
         if (this.field_187283_c.contains(p_187277_1_))
         {
-            if (this.field_187290_j)
+            // Return false to prevent client unloading the chunks when attempting to use spectate entitys near unloaded chunks. CARPET-XCOM
+            if (this.field_187290_j && (!CarpetSettings.spectatorsDontLoadChunks || !p_187277_1_.func_175149_v()))
             {
                 p_187277_1_.field_71135_a.func_147359_a(new SPacketUnloadChunk(this.field_187284_d.field_77276_a, this.field_187284_d.field_77275_b));
             }
@@ -80,9 +106,20 @@
 
             if (this.field_187283_c.isEmpty())
             {
+                // ChunkLogger - 0x-CARPET
+                if(CarpetClientChunkLogger.logger.enabled) {
+                    if(carpet.carpetclient.CarpetClientChunkLogger.logger.enabled)
+                        carpet.carpetclient.CarpetClientChunkLogger.setReason("Player removed from chunk");
+                	CarpetClientChunkLogger.logger.log(this.field_187282_b.func_72688_a(),field_187284_d.field_77276_a,field_187284_d.field_77275_b,CarpetClientChunkLogger.Event.PLAYER_LEAVES);
+                    carpet.carpetclient.CarpetClientChunkLogger.resetReason();
+                }
+            	
                 this.field_187282_b.func_187305_b(this);
             }
         }
+
+        // Added to enable randomticking chunk updates Carpet-XCOM
+        carpet.carpetclient.CarpetClientRandomtickingIndexing.enableUpdate(p_187277_1_);
     }
 
     public boolean func_187268_a(boolean p_187268_1_)
@@ -95,7 +132,10 @@
         {
             if (p_187268_1_)
             {
+                if(carpet.carpetclient.CarpetClientChunkLogger.logger.enabled)
+                    carpet.carpetclient.CarpetClientChunkLogger.setReason("Player loading new chunks and generating");
                 this.field_187286_f = this.field_187282_b.func_72688_a().func_72863_F().func_186025_d(this.field_187284_d.field_77276_a, this.field_187284_d.field_77275_b);
+                carpet.carpetclient.CarpetClientChunkLogger.resetReason();
             }
             else
             {
@@ -125,24 +165,57 @@
             this.field_187287_g = 0;
             this.field_187288_h = 0;
             this.field_187290_j = true;
-            Packet<?> packet = new SPacketChunkData(this.field_187286_f, 65535);
-
-            for (EntityPlayerMP entityplayermp : this.field_187283_c)
+            SPacketChunkData packet = new SPacketChunkData(this.field_187286_f, 65535);
+            for (EntityPlayerMP player : this.field_187283_c)
             {
-                entityplayermp.field_71135_a.func_147359_a(packet);
-                this.field_187282_b.func_72688_a().func_73039_n().func_85172_a(entityplayermp, this.field_187286_f);
+                instancesInRangeOf(player).forEach((chunkPos -> {
+                    packet.setChunkX(chunkPos.field_77276_a);
+                    packet.setChunkZ(chunkPos.field_77275_b);
+                    player.field_71135_a.func_147359_a(packet);
+                }));
+                this.field_187282_b.func_72688_a().func_73039_n().func_85172_a(player, this.field_187286_f);//TODO
             }
 
             return true;
         }
     }
 
+    private List<ChunkPos> instancesInRangeOf(EntityPlayerMP player){
+        int playerChunkX;
+        int playerChunkZ;
+        int radius = field_187282_b.getPlayerViewRadius();
+
+        if(CarpetSettings.playerChunkLoadingFix) {
+            playerChunkX = MathHelper.func_76128_c(player.field_70165_t) >> 4;
+            playerChunkZ = MathHelper.func_76128_c(player.field_70161_v) >> 4;
+        } else {
+            playerChunkX = (int)player.field_70165_t >> 4;
+            playerChunkZ = (int)player.field_70161_v >> 4;
+        }
+
+        List<ChunkPos> chunks = new ArrayList<>();
+        for(int chunkX = ((playerChunkX-radius) & (~X_CHUNK_MASK)) + (field_187286_f.field_76635_g&X_CHUNK_MASK); chunkX <= playerChunkX+radius; chunkX += CHUNK_HEIGHT){
+            for(int chunkZ = ((playerChunkZ-radius)&(~Z_CHUNK_MASK)) + (field_187286_f.field_76647_h&Z_CHUNK_MASK); chunkZ <= playerChunkZ+radius; chunkZ += CHUNK_WIDTH){
+                chunks.add(new ChunkPos(chunkX, chunkZ));
+            }
+        }
+        return chunks;
+    }
+
+
+
     public void func_187278_c(EntityPlayerMP p_187278_1_)
     {
         if (this.field_187290_j)
         {
-            p_187278_1_.field_71135_a.func_147359_a(new SPacketChunkData(this.field_187286_f, 65535));
-            this.field_187282_b.func_72688_a().func_73039_n().func_85172_a(p_187278_1_, this.field_187286_f);
+            SPacketChunkData packet = new SPacketChunkData(field_187286_f, 65535);
+            instancesInRangeOf(p_187278_1_).forEach((chunkPos -> {
+                packet.setChunkX(chunkPos.field_77276_a);
+                packet.setChunkZ(chunkPos.field_77275_b);
+                p_187278_1_.field_71135_a.func_147359_a(packet);
+            }));
+
+            this.field_187282_b.func_72688_a().func_73039_n().func_85172_a(p_187278_1_, this.field_187286_f);//TODO
         }
     }
 
@@ -248,12 +321,28 @@
     {
         if (p_187273_1_ != null)
         {
+            if (p_187273_1_ instanceof IPlayerSensitiveTileEntity)
+            {
+                if (field_187290_j)
+                {
+                    for (int i = 0; i < field_187283_c.size(); i++)
+                    {
+                        EntityPlayerMP player = field_187283_c.get(i);
+                        SPacketUpdateTileEntity packet = ((IPlayerSensitiveTileEntity) p_187273_1_).getUpdatePacketPlayerSensitive(player);
+                        if (packet != null)
+                            player.field_71135_a.func_147359_a(packet);
+                    }
+                }
+            }
+            else
+            {
             SPacketUpdateTileEntity spacketupdatetileentity = p_187273_1_.func_189518_D_();
 
             if (spacketupdatetileentity != null)
             {
                 this.func_187267_a(spacketupdatetileentity);
             }
+            }
         }
     }
 
@@ -274,8 +363,9 @@
         for (int j = this.field_187283_c.size(); i < j; ++i)
         {
             EntityPlayerMP entityplayermp = this.field_187283_c.get(i);
-
-            if (p_187271_3_.apply(entityplayermp) && this.field_187284_d.func_185327_a(entityplayermp) < p_187271_1_ * p_187271_1_)
+            float dx = (float) TorusUtil.wrap(entityplayermp.field_70165_t-field_187284_d.field_77276_a, TorusUtil.HEIGHT),
+                    dy = (float) TorusUtil.wrap(entityplayermp.field_70161_v-field_187284_d.field_77275_b, TorusUtil.WIDTH);
+            if (p_187271_3_.apply(entityplayermp) && dx*dx+dy*dy < p_187271_1_ * p_187271_1_)
             {
                 return true;
             }
